{"ast":null,"code":"var _jsxFileName = \"/Users/hisanokota/dev/react/my-app-react/src/components/ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToDoItem from './ToDoItem';\nimport AddTaskForm from './AddTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const addTask = taskName => {\n    const newTask = {\n      name: taskName,\n      isComplete: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const deleteTask = index => {\n    const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\n    setTasks(updatedTasks);\n  };\n  const toggleTaskCompletion = index => {\n    const updatedTasks = tasks.map((task, taskIndex) => {\n      if (taskIndex === index) {\n        return {\n          ...task,\n          isComplete: !task.isComplete\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(AddTaskForm, {\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(ToDoItem, {\n      task: task.name,\n      isComplete: task.isComplete,\n      onToggleComplete: () => toggleTaskCompletion(index),\n      onDelete: () => deleteTask(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoList, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","ToDoItem","AddTaskForm","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","addTask","taskName","newTask","name","isComplete","deleteTask","index","updatedTasks","filter","_","taskIndex","toggleTaskCompletion","map","task","className","children","onAddTask","fileName","_jsxFileName","lineNumber","columnNumber","onToggleComplete","onDelete","_c","$RefreshReg$"],"sources":["/Users/hisanokota/dev/react/my-app-react/src/components/ToDoList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ToDoItem from './ToDoItem';\nimport AddTaskForm from './AddTaskForm';\n\ntype Task = {\n    name: string;\n    isComplete: boolean;\n};\n\nconst ToDoList: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n\n    const addTask = (taskName: string) => {\n        const newTask: Task = { name: taskName, isComplete: false };\n        setTasks([...tasks, newTask]);\n    };\n\n    const deleteTask = (index: number) => {\n        const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\n        setTasks(updatedTasks);\n    };\n\n    const toggleTaskCompletion = (index: number) => {\n        const updatedTasks = tasks.map((task, taskIndex) => {\n            if (taskIndex === index) {\n                return { ...task, isComplete: !task.isComplete };\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    };\n\n    return (\n        <div className=\"todo-list\">\n            <AddTaskForm onAddTask={addTask} />\n            {tasks.map((task, index) => (\n                <ToDoItem \n                    key={index} \n                    task={task.name} \n                    isComplete={task.isComplete}\n                    onToggleComplete={() => toggleTaskCompletion(index)}\n                    onDelete={() => deleteTask(index)}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMS,OAAO,GAAIC,QAAgB,IAAK;IAClC,MAAMC,OAAa,GAAG;MAAEC,IAAI,EAAEF,QAAQ;MAAEG,UAAU,EAAE;IAAM,CAAC;IAC3DL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEI,OAAO,CAAC,CAAC;EACjC,CAAC;EAED,MAAMG,UAAU,GAAIC,KAAa,IAAK;IAClC,MAAMC,YAAY,GAAGT,KAAK,CAACU,MAAM,CAAC,CAACC,CAAC,EAAEC,SAAS,KAAKA,SAAS,KAAKJ,KAAK,CAAC;IACxEP,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMI,oBAAoB,GAAIL,KAAa,IAAK;IAC5C,MAAMC,YAAY,GAAGT,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEH,SAAS,KAAK;MAChD,IAAIA,SAAS,KAAKJ,KAAK,EAAE;QACrB,OAAO;UAAE,GAAGO,IAAI;UAAET,UAAU,EAAE,CAACS,IAAI,CAACT;QAAW,CAAC;MACpD;MACA,OAAOS,IAAI;IACf,CAAC,CAAC;IACFd,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED,oBACIZ,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBpB,OAAA,CAACF,WAAW;MAACuB,SAAS,EAAEhB;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClCtB,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEP,KAAK,kBACnBX,OAAA,CAACH,QAAQ;MAELqB,IAAI,EAAEA,IAAI,CAACV,IAAK;MAChBC,UAAU,EAAES,IAAI,CAACT,UAAW;MAC5BiB,gBAAgB,EAAEA,CAAA,KAAMV,oBAAoB,CAACL,KAAK,CAAE;MACpDgB,QAAQ,EAAEA,CAAA,KAAMjB,UAAU,CAACC,KAAK;IAAE,GAJ7BA,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACvB,EAAA,CArCID,QAAkB;AAAA2B,EAAA,GAAlB3B,QAAkB;AAuCxB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}